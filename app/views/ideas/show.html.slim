div class="panel-idea"
  h1 = link_to @idea.title, @idea
  p = @idea.description_truncate 250

  - if @idea.image?
    p = image_tag @idea.image.url, width: 200


  div class="tools"
    p
      strong by #{link_to @idea.creator_username, @idea.creator_user}

    - if user_signed_in? && @idea.members_include?(current_user)
      = link_to "Leave", idea_idea_member_path(@idea, @idea.membership_for(current_user)), class: "btn btn-info", method: :delete
    - elsif current_user != @idea.user
      = link_to "Join", idea_idea_members_path(@idea), class: "btn btn-info", method: :post
    span &nbsp;&nbsp;&nbsp;
    - if user_signed_in? && @idea.liked_by?(current_user)
      = link_to "Unlike", idea_like_path(@idea, @idea.like_for(current_user)), class: "btn btn-danger", method: :delete
    - elsif current_user != @idea.user
      = link_to "Like", idea_likes_path(@idea), class: "btn btn-danger", method: :post
    span &nbsp;&nbsp;&nbsp;

    - if can? :manage, @idea
      = link_to "edit", edit_idea_path(@idea)
      span &nbsp;&nbsp;&nbsp;
      = link_to "delete", idea_path(@idea), method: :delete, data: { confirm: "Really delete this idea?" }

    div class="pull-right"
      p
        = "<strong>Members:</strong> #{@idea.num_members}".html_safe
        = " â€¢ "
        = "<strong>Likes:</strong> #{@idea.num_likes}".html_safe

    div class="clearfix"



/ TODO: tool partials



/ TODO: comment partials
h3 Comments
- if user_signed_in? && current_user != @idea.user
  h2 New Comment
  - if @comment.errors.any?
    div class="alert alert-danger"
      p = @comment.errors.full_messages.join(", ")
  = form_for [@idea, @comment] do |f|
    div class="form-group"
      = f.label :body
      = f.text_area :body, class: "form-control"
    div class="form-group"
      = f.submit "Post Comment", class: "btn btn-success"
- elsif current_user == @idea.user
  p
- else
  p You must be logged in to post new comments.

- @idea.comments_by_date.each do |comment|
  div class="well"
    p = "<strong>#{comment.user.username}</strong> on <strong>#{comment.created_at.to_formatted_s(:long_ordinal)}</strong>".html_safe
    p = comment.body
    / TODO: comment CRUD
